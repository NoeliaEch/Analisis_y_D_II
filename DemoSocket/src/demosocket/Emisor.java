
package demosocket;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;


import javax.swing.JPanel;
import java.awt.BorderLayout;
import javax.swing.JTextArea;
import java.awt.FlowLayout;
import java.awt.Dimension;
import java.awt.Component;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.awt.Font;

/**
 *
 * @author grupo 3
 */
public class Emisor extends javax.swing.JFrame implements ActionListener {

    /**
     * Crea nueva aplicacion-local
     */
	
	private String accion_presionada ="";
	private javax.swing.JButton[] btnPress= new javax.swing.JButton[3];
	
	
    public Emisor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    
    private void initComponents() {
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Enviando ");
        jButton1.addActionListener(this);
        
        
        panel = new JPanel();
        panel.setSize(new Dimension(100, 600));
        panel.setPreferredSize(new Dimension(650, 450));
        panel.setBounds(new Rectangle(0, 0, 1000, 1000));
        panel.setMinimumSize(new Dimension(1000, 1000));
        getContentPane().add(panel, BorderLayout.CENTER);
        panel.setLayout(null);
        
        jTextArea1 = new JTextArea();
        jTextArea1.setBounds(50, 300, 550, 130);
        jTextArea1.setRows(30);
        jTextArea1.setColumns(90);
        panel.add(jTextArea1);
        
        // BOTON SOLICITUD DE SEGURIDAD
        JButton btnSeguridad = new JButton("");
        btnSeguridad.setIcon(new ImageIcon(Emisor.class.getResource("/Imagenes/policiaCuadroMini.png")));
        btnSeguridad.setMaximumSize(new Dimension(28, 7));
        btnSeguridad.setBounds(250, 40, 150, 200);
        panel.add(btnSeguridad);
        btnSeguridad.setActionCommand("Seguridad");
        btnSeguridad.addActionListener(this);
        
        // BOTON SOLICITUD DE AMBULANCIA
        JButton btnAmbulancia = new JButton("");
        btnAmbulancia.setIcon(new ImageIcon(Emisor.class.getResource("/Imagenes/firstAidCuadroMini.png")));
        btnAmbulancia.setBounds(50, 40, 150, 200);
        panel.add(btnAmbulancia);
        btnAmbulancia.setActionCommand("Ambulancia");
        btnAmbulancia.addActionListener(this);
        
        // LABEL DE MENSAJE ADICIONAL
        JLabel lblNewLabel = new JLabel("Mensaje adicional:");
        lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lblNewLabel.setBounds(55, 270, 139, 27);
        panel.add(lblNewLabel);
        
        // BOTON AVISO DE INCENDIO
        JButton btnIncendio = new JButton("");
        btnIncendio.setIcon(new ImageIcon(Emisor.class.getResource("/Imagenes/fuegoCuadroMini.png")));
        btnIncendio.setBounds(450, 40, 150, 200);
        panel.add(btnIncendio);
        btnIncendio.setActionCommand("Incendio");
        btnIncendio.addActionListener(this);
        getContentPane().add(jButton1, java.awt.BorderLayout.PAGE_END);

        // ARRAY DE LOS BOTONES PARA HABILITARLOS O DESHABILITARLOS A GUSTO
        btnPress[0] = btnIncendio;
        btnPress[1] = btnAmbulancia;
        btnPress[2] = btnSeguridad;
        
        // TEXTFIELD QUE CONTIENE LA DIRECCION IP --> BLOQUEAR CUANDO SE LEA DESDE ARCHIVO DE CONFIG.
        jTextField1.setText("localhost");

        // TEXTFIELD PARA INDICAR EL PUERTO HACIA DONDE SE ENVIA LA SOLICITUD
        jTextField2.setText("1234");

        // LABEL PARA JTEXTFIELD1, QUE CONTIENE LA DIRECCION IP
        jLabel1.setText("IP:");

        // LABEL PARA JTEXTFIELD2, QUE CONTIENE EL PUERTO
        jLabel2.setText("Puerto:");

        // LAYOUT
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
        
        // LAYOUT
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }
    
      
    // METODO PARA ENVIAR MENSAJES
    void enviaMensaje(String mensaje) {
    	try {    		
            Socket socket = new Socket(jTextField1.getText(),Integer.parseInt(jTextField2.getText()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out.println(mensaje);
            out.println(jTextArea1.getText());            
            out.close();
            socket.close();
            jTextArea1.setText("");
            this.accion_presionada = "";
            //
            for (int i=0;i<3;i++) {				
					btnPress[i].setEnabled(true);
				
			}
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Emisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Emisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Emisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Emisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emisor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private JPanel panel;
    private JTextArea jTextArea1;
    
    
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		String actionCommand = ((JButton) e.getSource()).getActionCommand().toString();
		
		if (actionCommand =="Seguridad" || actionCommand=="Ambulancia" || actionCommand=="Incendio") {
			// si previamente presione los botones, seteo variables privadas

			this.accion_presionada += actionCommand;
			JButton btn = (JButton) e.getSource();
			//btn.setEnabled(false);
			for (int i=0;i<3;i++) {
				if (!this.btnPress[i].equals(btn)){
					btnPress[i].setEnabled(false);
				}
			}
			
		}
		else {
			
			String msj_adicional = jTextArea1.getText();
			

			enviaMensaje( actionCommand + " - "+this.accion_presionada+" - "+msj_adicional);
		}
		
	}
}
